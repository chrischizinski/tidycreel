name: R-CMD-check

on: [push, pull_request]

jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        r: ['release']
    steps:
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r }}
      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gettext
          brew install harfbuzz fribidi
      - name: Set library path for system libraries (macOS)
        if: runner.os == 'macOS'
        run: |
          echo 'export LIBRARY_PATH=/opt/homebrew/lib:$LIBRARY_PATH' >> $GITHUB_ENV
          echo 'export CPPFLAGS=-I/opt/homebrew/include' >> $GITHUB_ENV
          echo 'export LDFLAGS=-L/opt/homebrew/lib' >> $GITHUB_ENV
          echo 'export PKG_CONFIG_PATH=/opt/homebrew/lib/pkgconfig:$PKG_CONFIG_PATH' >> $GITHUB_ENV
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            any::testthat
            any::lintr
            any::styler
          needs: check
      - name: Restore renv packages
        run: Rscript -e "if (file.exists('renv.lock')) renv::restore()"
      - name: Lint
        run: Rscript -e "lintr::lint_package()"
      - name: Style (dry-run)
        run: Rscript -e "styler::style_dir(dry = 'on')"
      - name: Check
        env:
          _R_CHECK_FORCE_SUGGESTS_: false
          R_DEFAULT_INTERNET_TIMEOUT: 20
          LC_ALL: C.UTF-8
        run: Rscript -e "rcmdcheck::rcmdcheck(error_on='warning', check_dir='check')"
      - name: Upload check results on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: r-cmd-check-results
          path: check
